@model WebApp.ViewModels.EditProjectFormViewModel
@using System.Text.Json
@{
    var preselectedTags = Model.Members
        .Where(m => Model.FormData.SelectedMemberIds.Contains(m.Id))
        .Select(m => new
        {
            id = m.Id,
            tagName = $"{m.FirstName} {m.LastName}",
            imageUrl = m.ImageName ?? ""
        }).ToList();

    var preselectedJson = JsonSerializer.Serialize(preselectedTags);
}

<div id="editProjectModal" class="modal">
    <div class="modal-content">
        <div class="modal-header">
            <h3>Edit Project</h3>
            <button type="button" class="btn-close" data-close="true"></button>
        </div>

        <div class="scroll-container">
            <div class="inner-padding">
                <form id="edit-project-form" novalidate method="post" action="/projectcrud/edit" enctype="multipart/form-data">
                    @Html.AntiForgeryToken()
                    <input asp-for="FormData.Form.Id" type="hidden" />
                    <input type="hidden" asp-for="FormData.SelectedMemberIdsRaw" id="FormData_SelectedMemberIds" />

                    <div class="image-previewer square @(string.IsNullOrWhiteSpace(Model.FormData.Form.ImageName) ? "" : "selected")">
                        <img src="~/@Model.FormData.Form.ImageName" class="image-preview" />
                        <input asp-for="FormData.Form.ProjectImage" accept="image/*" class="hide" />
                    </div>

                    <div class="form-group">
                        <label asp-for="FormData.Form.ProjectName"></label>
                        <div class="field-group">
                            <input asp-for="FormData.Form.ProjectName" />
                            <span asp-validation-for="FormData.Form.ProjectName"></span>
                        </div>
                    </div>
                    <div class="form-group">
                        <label asp-for="FormData.SelectedClientId">Client Name</label>
                        <select class="custom-select-dropdown" asp-for="FormData.SelectedClientId" asp-items="@(new SelectList(Model.Clients, "ClientId", "ClientName"))">
                            <option value="">-- Select Client --</option>
                        </select>
                        <span asp-validation-for="FormData.SelectedClientId"></span>
                    </div>

                    <div class="form-group">
                        <label asp-for="FormData.SelectedStatusId">Status</label>
                        <select class="custom-select-dropdown" asp-for="FormData.SelectedStatusId" asp-items="@(new SelectList(Model.Statuses, "Id", "StatusName"))">
                            <option value="">-- Select Status --</option>
                        </select>
                        <span asp-validation-for="FormData.SelectedStatusId"></span>
                    </div>

                    <div class="form-group">
                        <label asp-for="FormData.Form.Description"></label>
                        <div class="field-group">
                            <textarea asp-for="FormData.Form.Description"></textarea>
                            <span asp-validation-for="FormData.Form.Description"></span>
                        </div>
                    </div>

                    <div class="form-group date-group">
                        <div>
                            <label asp-for="FormData.Form.StartDate"></label>
                            <div class="field-group">
                                <input asp-for="FormData.Form.StartDate" type="date" />
                                <span asp-validation-for="FormData.Form.StartDate"></span>
                            </div>
                        </div>
                        <div>
                            <label asp-for="FormData.Form.EndDate"></label>
                            <div class="field-group">
                                <input asp-for="FormData.Form.EndDate" type="date" />
                                <span asp-validation-for="FormData.Form.EndDate"></span>
                            </div>
                        </div>
                    </div>

                    <div class="form-group">
                        <label class="form-label">Members</label>
                        <div id="project-tags" class="form-tag-select icon-input">
                            <input id="project-tag-search" type="text" class="form-tag-input" placeholder="Add member..." />
                            <i class="fa fa-search search-icon" aria-hidden="true"></i>
                            <div id="project-tag-search-results" class="search-results"></div>
                        </div>
                    </div>

                    <div class="form-group">
                        <label asp-for="FormData.Form.Budget"></label>
                        <div class="field-group icon-input">
                            <span class="icon-dollar"><i class="fas fa-dollar-sign"></i></span>
                            <input asp-for="FormData.Form.Budget" />
                            <span asp-validation-for="FormData.Form.Budget"></span>
                        </div>
                    </div>

                    <button type="submit" class="btn btn-submit btn-blue">Save</button>
                </form>
            </div>
        </div>
    </div>
</div>

<script>
    (() => {
        const modal = document.getElementById('editProjectModal');
        const preSelectedTags = @Html.Raw(preselectedJson);
        const searchTagsUrl = '@Url.Action("SearchTags", "Tags")';

        console.log('Init tags (Edit)', preSelectedTags);

        initTagSelector({
            rootElement: modal,
            containerId: 'project-tags',
            inputId: 'project-tag-search',
            resultsId: 'project-tag-search-results',
            selectedInputIds: 'FormData_SelectedMemberIds',
            searchUrl: (query) => `${searchTagsUrl}?term=${encodeURIComponent(query)}`,
            displayProperty: 'tagName',
            imageProperty: 'imageUrl',
            tagClass: 'user-tag',
            avatarFolder: '',
            emptyMessage: 'No members found.',
            preselected: preSelectedTags
        });
    })();
</script>
